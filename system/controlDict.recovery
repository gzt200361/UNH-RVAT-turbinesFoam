/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "controlDict"
#inputMode overwrite

functions
{
    readFields
    {
        functionObjectLibs ("libfieldFunctionObjects.so");
        type            readFields;
        fields          (pMean UMean kMean turbulenceProperties:RMean);
    }

    recoveryTerms
    {
        functionObjectLibs ("libutilityFunctionObjects.so");
        type coded;
        // Name of on-the-fly generated functionObject
        redirectType writeRecoveryTerms;
        code
        #{
            const volVectorField& UMean
                = mesh().lookupObject<volVectorField>("UMean");
            const volScalarField UMeanX = UMean.component(0);
            const volScalarField& pMean
                = mesh().lookupObject<volScalarField>("pMean");
            const volSymmTensorField& RMean =
                mesh().lookupObject<volSymmTensorField>
                (
                    "turbulenceProperties:RMean"
                );
            const volSymmTensorField& UPrime2Mean
                = mesh().lookupObject<volSymmTensorField>("UPrime2Mean");

            volVectorField divRMean = fvc::div(RMean);
            volVectorField divUPrime2Mean = fvc::div(UPrime2Mean);
            volVectorField gradPMean = fvc::grad(pMean);

            volScalarField gradPMeanX
            (
                IOobject
                (
                    "gradPMeanX",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::NO_READ,
                    IOobject::AUTO_WRITE
                ),
                gradPMean.component(0)
            );

            volVectorField gradUMeanX
            (
                IOobject
                (
                    "gradUMeanX",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::NO_READ,
                    IOobject::AUTO_WRITE
                ),
                fvc::grad(UMeanX)
            );

            volScalarField laplacianUMeanX
            (
                IOobject
                (
                    "laplacianUMeanX",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::NO_READ,
                    IOobject::AUTO_WRITE
                ),
                fvc::laplacian(UMeanX)
            );

            volScalarField divRMeanX
            (
                IOobject
                (
                    "divRMeanX",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::NO_READ,
                    IOobject::AUTO_WRITE
                ),
                divRMean.component(0)
            );

            volScalarField divUPrime2MeanX
            (
                IOobject
                (
                    "divUPrime2MeanX",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::NO_READ,
                    IOobject::AUTO_WRITE
                ),
                divUPrime2Mean.component(0)
            );

            gradPMeanX.write();
            gradUMeanX.write();
            laplacianUMeanX.write();
            divRMeanX.write();
            divUPrime2MeanX.write();
        #};
    }
}

// ************************************************************************* //
